context.properties = {
    link.max-buffers = 16
    core.daemon = true
    core.name = pipewire-0
}

context.spa-libs = {
    audio.convert.* = audioconvert/libspa-audioconvert
    avb.*           = avb/libspa-avb
    api.alsa.* = alsa/libspa-alsa
    api.v4l2.* = v4l2/libspa-v4l2
    api.bluez5.* = bluez5/libspa-bluez5
    support.* = support/libspa-support
    api.libcamera.* = libcamera/libspa-libcamera
    api.vulkan.*    = vulkan/libspa-vulkan
    api.jack.*      = jack/libspa-jack
    support.*       = support/libspa-support
}

context.modules = [
    { name = libpipewire-module-rt
        args = {
            nice.level = -11
        }
        flags = [ ifexists nofail ]
    }
    { name = libpipewire-module-protocol-native }
    { name = libpipewire-module-profiler }
    { name = libpipewire-module-metadata }
    { name = libpipewire-module-spa-device-factory }
    { name = libpipewire-module-spa-node-factory }
    { name = libpipewire-module-client-node }
    { name = libpipewire-module-client-device }
    { name = libpipewire-module-portal
        flags = [ ifexists nofail ]
    }
    { name = libpipewire-module-access
        args = {
            access.legacy = true
        }
        condition = [ { module.access = true } ]
    }
    { name = libpipewire-module-adapter }
    { name = libpipewire-module-link-factory }
    { name = libpipewire-module-session-manager }

    # Virtual Surround Configuration
    { name = libpipewire-module-filter-chain
        args = {
            node.description = "Virtual Surround Sink"
            media.name = "Virtual Surround Sink"
            filter.graph = {
                nodes = [
                    # Input duplicators
                    { type = builtin label = copy name = copyFL }
                    { type = builtin label = copy name = copyFR }
                    { type = builtin label = copy name = copyFC }
                    { type = builtin label = copy name = copyRL }
                    { type = builtin label = copy name = copyRR }
                    { type = builtin label = copy name = copySL }
                    { type = builtin label = copy name = copySR }
                    { type = builtin label = copy name = copyLFE }

                    # HRIR Convolution for each channel
                    { type = builtin label = convolver name = convFL_L config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 0 } }
                    { type = builtin label = convolver name = convFL_R config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 1 } }
                    { type = builtin label = convolver name = convSL_L config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 2 } }
                    { type = builtin label = convolver name = convSL_R config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 3 } }
                    { type = builtin label = convolver name = convRL_L config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 4 } }
                    { type = builtin label = convolver name = convRL_R config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 5 } }
                    { type = builtin label = convolver name = convFC_L config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 6 } }
                    { type = builtin label = convolver name = convFR_R config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 7 } }
                    { type = builtin label = convolver name = convFR_L config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 8 } }
                    { type = builtin label = convolver name = convSR_R config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 9 } }
                    { type = builtin label = convolver name = convSR_L config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 10 } }
                    { type = builtin label = convolver name = convRR_R config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 11 } }
                    { type = builtin label = convolver name = convRR_L config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 12 } }
                    { type = builtin label = convolver name = convFC_R config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 13 } }

                    # LFE treatment
                    { type = builtin label = convolver name = convLFE_L config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 6 } }
                    { type = builtin label = convolver name = convLFE_R config = { filename = "@ATMOS_PATH@/atmos.wav" channel = 13 } }

                    # Output mixers
                    { type = builtin label = mixer name = mixL }
                    { type = builtin label = mixer name = mixR }
                ]
                links = [
                    # Input connections
                    { output = "copyFL:Out"  input = "convFL_L:In" }
                    { output = "copyFL:Out"  input = "convFL_R:In" }
                    { output = "copySL:Out"  input = "convSL_L:In" }
                    { output = "copySL:Out"  input = "convSL_R:In" }
                    { output = "copyRL:Out"  input = "convRL_L:In" }
                    { output = "copyRL:Out"  input = "convRL_R:In" }
                    { output = "copyFC:Out"  input = "convFC_L:In" }
                    { output = "copyFR:Out"  input = "convFR_R:In" }
                    { output = "copyFR:Out"  input = "convFR_L:In" }
                    { output = "copySR:Out"  input = "convSR_R:In" }
                    { output = "copySR:Out"  input = "convSR_L:In" }
                    { output = "copyRR:Out"  input = "convRR_R:In" }
                    { output = "copyRR:Out"  input = "convRR_L:In" }
                    { output = "copyFC:Out"  input = "convFC_R:In" }
                    { output = "copyLFE:Out" input = "convLFE_L:In" }
                    { output = "copyLFE:Out" input = "convLFE_R:In" }

                    # Output mixing
                    { output = "convFL_L:Out"  input = "mixL:In 1" }
                    { output = "convFL_R:Out"  input = "mixR:In 1" }
                    { output = "convSL_L:Out"  input = "mixL:In 2" }
                    { output = "convSL_R:Out"  input = "mixR:In 2" }
                    { output = "convRL_L:Out"  input = "mixL:In 3" }
                    { output = "convRL_R:Out"  input = "mixR:In 3" }
                    { output = "convFC_L:Out"  input = "mixL:In 4" }
                    { output = "convFC_R:Out"  input = "mixR:In 4" }
                    { output = "convFR_R:Out"  input = "mixR:In 5" }
                    { output = "convFR_L:Out"  input = "mixL:In 5" }
                    { output = "convSR_R:Out"  input = "mixR:In 6" }
                    { output = "convSR_L:Out"  input = "mixL:In 6" }
                    { output = "convRR_R:Out"  input = "mixR:In 7" }
                    { output = "convRR_L:Out"  input = "mixL:In 7" }
                    { output = "convLFE_R:Out" input = "mixR:In 8" }
                    { output = "convLFE_L:Out" input = "mixL:In 8" }
                ]
                inputs = [ "copyFL:In" "copyFR:In" "copyFC:In" "copyLFE:In" "copyRL:In" "copyRR:In" "copySL:In" "copySR:In" ]
                outputs = [ "mixL:Out" "mixR:Out" ]
            }
            capture.props = {
                node.name = "effect_input.virtual-surround-7.1-hesuvi"
                media.class = Audio/Sink
                audio.channels = 8
                audio.position = [ FL FR FC LFE RL RR SL SR ]
            }
            playback.props = {
                node.name = "effect_output.virtual-surround-7.1-hesuvi"
                node.passive = true
                audio.channels = 2
                audio.position = [ FL FR ]
            }
        }
    }
]


context.properties = {
    # Core settings
    core.daemon = true
    core.name = pipewire-0
    
    # Performance settings
    default.clock.rate = 96000
    default.clock.quantum = 1024
    default.clock.min-quantum = 1024
    default.clock.max-quantum = 2048
    default.clock.allowed-rates = [ 44100 48000 88200 96000 ]
    
    # Memory settings
    mem.allow-mlock = true
    
    # Link buffer settings
    link.max-buffers = 16
}

context.spa-libs = {
    audio.convert.* = audioconvert/libspa-audioconvert
    api.alsa.*      = alsa/libspa-alsa
    api.v4l2.*      = v4l2/libspa-v4l2
    api.bluez5.*    = bluez5/libspa-bluez5
    support.*       = support/libspa-support
}

context.modules = [
    { name = libpipewire-module-rt
        args = {
            nice.level = -11
            rt.prio = 88
            rt.time.soft = -1
            rt.time.hard = -1
        }
        flags = [ ifexists nofail ]
    }
    { name = libpipewire-module-protocol-native }
    { name = libpipewire-module-profiler }
    { name = libpipewire-module-metadata }
    { name = libpipewire-module-spa-device-factory }
    { name = libpipewire-module-spa-node-factory }
    { name = libpipewire-module-client-node }
    { name = libpipewire-module-client-device }
    { name = libpipewire-module-adapter }
    { name = libpipewire-module-link-factory }
    { name = libpipewire-module-session-manager }

    # Virtual Surround Configuration
    { name = libpipewire-module-filter-chain
        args = {
            node.description = "Virtual Surround Sink"
            media.name = "Virtual Surround Sink"
            filter.graph = {
                nodes = [
                    # Input duplicators
                    { type = builtin label = copy name = copyFL }
                    { type = builtin label = copy name = copyFR }
                    { type = builtin label = copy name = copyFC }
                    { type = builtin label = copy name = copyRL }
                    { type = builtin label = copy name = copyRR }
                    { type = builtin label = copy name = copySL }
                    { type = builtin label = copy name = copySR }
                    { type = builtin label = copy name = copyLFE }

                    # HRIR Convolution for each channel
                    { type = builtin label = convolver name = convFL_L config = { filename = "/etc/pipewire/atmos.wav" channel =  0 } }
                    { type = builtin label = convolver name = convFL_R config = { filename = "/etc/pipewire/atmos.wav" channel =  1 } }
                    { type = builtin label = convolver name = convSL_L config = { filename = "/etc/pipewire/atmos.wav" channel =  2 } }
                    { type = builtin label = convolver name = convSL_R config = { filename = "/etc/pipewire/atmos.wav" channel =  3 } }
                    { type = builtin label = convolver name = convRL_L config = { filename = "/etc/pipewire/atmos.wav" channel =  4 } }
                    { type = builtin label = convolver name = convRL_R config = { filename = "/etc/pipewire/atmos.wav" channel =  5 } }
                    { type = builtin label = convolver name = convFC_L config = { filename = "/etc/pipewire/atmos.wav" channel =  6 } }
                    { type = builtin label = convolver name = convFR_R config = { filename = "/etc/pipewire/atmos.wav" channel =  7 } }
                    { type = builtin label = convolver name = convFR_L config = { filename = "/etc/pipewire/atmos.wav" channel =  8 } }
                    { type = builtin label = convolver name = convSR_R config = { filename = "/etc/pipewire/atmos.wav" channel =  9 } }
                    { type = builtin label = convolver name = convSR_L config = { filename = "/etc/pipewire/atmos.wav" channel = 10 } }
                    { type = builtin label = convolver name = convRR_R config = { filename = "/etc/pipewire/atmos.wav" channel = 11 } }
                    { type = builtin label = convolver name = convRR_L config = { filename = "/etc/pipewire/atmos.wav" channel = 12 } }
                    { type = builtin label = convolver name = convFC_R config = { filename = "/etc/pipewire/atmos.wav" channel = 13 } }

                    # LFE treatment
                    { type = builtin label = convolver name = convLFE_L config = { filename = "/etc/pipewire/atmos.wav" channel =  6 } }
                    { type = builtin label = convolver name = convLFE_R config = { filename = "/etc/pipewire/atmos.wav" channel = 13 } }

                    # Final mixing
                    { type = builtin label = mixer name = mixL }
                    { type = builtin label = mixer name = mixR }
                ]
                links = [
                    # Input connections
                    { output = "copyFL:Out"  input = "convFL_L:In" }
                    { output = "copyFL:Out"  input = "convFL_R:In" }
                    { output = "copySL:Out"  input = "convSL_L:In" }
                    { output = "copySL:Out"  input = "convSL_R:In" }
                    { output = "copyRL:Out"  input = "convRL_L:In" }
                    { output = "copyRL:Out"  input = "convRL_R:In" }
                    { output = "copyFC:Out"  input = "convFC_L:In" }
                    { output = "copyFR:Out"  input = "convFR_R:In" }
                    { output = "copyFR:Out"  input = "convFR_L:In" }
                    { output = "copySR:Out"  input = "convSR_R:In" }
                    { output = "copySR:Out"  input = "convSR_L:In" }
                    { output = "copyRR:Out"  input = "convRR_R:In" }
                    { output = "copyRR:Out"  input = "convRR_L:In" }
                    { output = "copyFC:Out"  input = "convFC_R:In" }
                    { output = "copyLFE:Out" input = "convLFE_L:In" }
                    { output = "copyLFE:Out" input = "convLFE_R:In" }

                    # Output mixing
                    { output = "convFL_L:Out"  input = "mixL:In 1" }
                    { output = "convFL_R:Out"  input = "mixR:In 1" }
                    { output = "convSL_L:Out"  input = "mixL:In 2" }
                    { output = "convSL_R:Out"  input = "mixR:In 2" }
                    { output = "convRL_L:Out"  input = "mixL:In 3" }
                    { output = "convRL_R:Out"  input = "mixR:In 3" }
                    { output = "convFC_L:Out"  input = "mixL:In 4" }
                    { output = "convFC_R:Out"  input = "mixR:In 4" }
                    { output = "convFR_R:Out"  input = "mixR:In 5" }
                    { output = "convFR_L:Out"  input = "mixL:In 5" }
                    { output = "convSR_R:Out"  input = "mixR:In 6" }
                    { output = "convSR_L:Out"  input = "mixL:In 6" }
                    { output = "convRR_R:Out"  input = "mixR:In 7" }
                    { output = "convRR_L:Out"  input = "mixL:In 7" }
                    { output = "convLFE_R:Out" input = "mixR:In 8" }
                    { output = "convLFE_L:Out" input = "mixL:In 8" }
                ]
                inputs = [ "copyFL:In" "copyFR:In" "copyFC:In" "copyLFE:In" "copyRL:In" "copyRR:In" "copySL:In" "copySR:In" ]
                outputs = [ "mixL:Out" "mixR:Out" ]
            }
            capture.props = {
                node.name = "effect_input.virtual-surround-7.1-hesuvi"
                media.class = Audio/Sink
                audio.channels = 8
                audio.position = [ FL FR FC LFE RL RR SL SR ]
            }
            playback.props = {
                node.name = "effect_output.virtual-surround-7.1-hesuvi"
                node.passive = true
                audio.channels = 2
                audio.position = [ FL FR ]
            }
        }
    }
]